<!DOCTYPE html>
<!-- saved from url=(0030)http://127.0.0.1:5500/try.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Document</title>
      <link rel="stylesheet" href="./Document_files/reset.css">
      <link rel="stylesheet" href="./Document_files/try.css">
      <style>
            body{ 
                  position: relative;
            }
            .menu{ 
                  position: absolute;
                  top: 50%;
                  left: 50%;
                  transform: translate(-50%, -50%);
                 
            }
            button{ 
                  width: 200px;
                  height: 100px;
                  background-color: blue;
                  color: #fff;
            }
            button img { 
                  height: 80%; 
                  display: inline-block;
            }

      </style>
</head>
<body cz-shortcut-listen="true">
      <div class="menu">
            <button class="menu-btn">
                  <img src="./Document_files/ilbuni_1.png" alt="">
                  <span>일분이1</span>
            </button>
            <button class="menu-btn">
                  <img src="./Document_files/ilbuni_2.png" alt="">
                  <span>일분이2</span>
            </button>
            <button class="menu-btn">
                  <img src="./Document_files/ilbuni_3.png" alt="">
                  <span>일분이3</span>
            </button>
      </div>
<!-- Code injected by live-server -->
<script type="text/javascript">
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>

<script>
     const btns = document.querySelectorAll('.menu-btn');
     for ( let i = 0; i < btns.length; i ++){ 
           btns[i].addEventListener('click', clickBtnHandler);
     }
</script>
</body></html>